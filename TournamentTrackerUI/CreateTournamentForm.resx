<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACpBgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAGPklEQVRoQ8WaTUge
        RxjHp8WDByEBCxYspJCDEEsOWqTNwZRAoGIvSoUIGiSHkIOCB4UEBAs9eMjBg4dAhBBS8GJRqgmplARM
        a9pQTJPUQ6CBKjXUYMQGBQMJbJ/fvDvb2d159yu+6R9+7r6zs7uzs/N8zKzvqP3TJ8JnQp3wgfC+v0Ub
        PuvCM+Enn9fC/6Zq4XNhUvhL8HKyKXwjfCnUCG9NVUKf8LfgalgRtoVBgU6pqL4QfhdcjdgP/hB6hH0X
        r3hWcN20EvwoYEP7Igyxkr1eDuzqY+GNhGeJjfWqqipvYmLCq6mp8VpaWry9vb1CdHR06OudP39eXzN6
        H2FHOCUUEo3nArELX7x4UTdgfHxc/2YbbVwaU1NT+tze3l79+9KlS6F7RMBp5BLDxull+vr6gkbs7Ozo
        N8CbePLkSVCexvr6uldbW6vZ2NgIyvv7+2P389kT6NBMwmCdY761tVU32m7MgwcPvOrqaq+trS1UnkRX
        V5e+Hm/BLufaJ0+ejN3Xhw41gTFRTm9z+PBh3XP2DQ1jY2O6zrVr15zHbWZmZnRdxr/r+ObmpnfkyJHQ
        vS1+FYhDZYWfj53IEKGnXTcEeu7o0aN6SJR7SGC41NfXp9Z7/PixV1dXF2uHzzkh0Lv+FvFkY6XdsF6/
        Tk5ZxIOoyclJ9eLFC3XhwgW/NK7h4WH19OlTJUav5CH80rgOHjyor1lGo4Iz9cDSXU+swVij4z/KyMiI
        81ybLLbS3d3tPNfiKyEkcpDU3IYGum5o4AEbGhqc58KBAwdSvZVxryng3kORmqzSVTEEwebevXvOGxsW
        FxfLBSXv8uXLznMMxr26znUQsgVSYlelGBhr2lAaHByMnZdl6JjInJEfhEC58nlCv6sBhu3tbe12TX28
        GJ7FVdfA27HvkQGCmzZmIpyrQlkYIgwVV0MMCwsLQf20VAO7wD7se2TkFG6UaWAu4VbPnj2rXr586ZeU
        RPmjR4/U1atX1ezsrJKe1+5wbW1Nzc/Pq2fPmE3GNTAwoF1wAR3nz7jgerpUGOumF0nGEoJPQFNTk3fj
        xo3gPLJaV72MkDWoaasgFwwlhgeNssuJthgtmSawb9sEUMaDYB92eU5ILfTsx3UwNyR7t27dCno3Ci44
        p6dJA+ej/rQKCkEv5pkTEKxy+Ps0Ci2JBJA5prlIFwStY8eOOa+ZBxa2fhYyTxZs4WGWlpaUBDe/pKTp
        6Wl1+/Ztdf/+fe2ZmpublTRW9fT0hJI0EjuOFfRAiMWy4qsN0dyIN4EdmOMMEyK3+c1+NBUpEMBsfhPU
        hFWQGYaOnVK48himn6Ojo6Ey19wiYRaWxrygRqyCzOD37Ua4vMvc3JxubLQ8mprjTqN1MkIOpyOx62Ai
        9oxqeXk5dpyeJifieDQGAFNLcz4PUzCV6COVYJX4uZBZzKbA6M6dO9o4ZW6spEEamdsqmezr4ysrK0H5
        lStXdIpx9+5dfQxx7qFDh/xfmcU08ToPwM73lGQVUz5bDx8+1N6G6WR7e7v2LlHhaU6fPq3OnDmjdnd3
        9Tm2otfMoF+E52ZO/J2/zSQaa8u+Oe7z+HGdY4XU2dmp3asRb+ENpdtsHoA38E9pN13RrFKM0t8rKRoX
        ULSMuGDL9dYSRA9+W9r9T0OCy1Cc2P4cg8ZozTE8FOs7LGCdOHHCW11dDXkakkAM3z6fMnM8A2TQMWFx
        mfOioaGhoAFALkQ5DcF9ilEGdYkPeB0TJ+w0HHKm1HwMeU9wKnFpxYYej+ZApMgsM5brTc4h9TbuFcxi
        l6t+GYhbicqcXpM22A8AvAl7OBl4KFKP6IIA84Vo3QT4ghP6DOX6Ssl6CxOFTAup0mB17lxohUNtbW1p
        N8n0Eo/V2NioDd2OHejmzZvaO2XUrvCpsKJ/pYgvI85vA1EYMizupi21RCGJc72pBPiamUt8GXFdyAn5
        TdICsIEVCGzFdY0EvhYKCaNm/cV10Ri8DTJQXKadK7HPVJMPGAVynsKNN3J+J3sLMIRzD5tywqAxbNeN
        KgHe5iNhX8VcsF+o5NsgSOHnK/rFnsyN9fnMtpGBVwLpQdkIWwkRLwgArBIXeRgaTdAkB/tQKKT9+ncb
        cmO+r5FHm3+zMVtk/7sN2yXhupBrIhWXUv8CacF5Ep8KBjMAAAAASUVORK5CYII=
</value>
  </data>
</root>